{"version":3,"sources":["components/Login.js","components/Collection.js","components/CollectionList.js","components/Pokedex.js","components/MemberList.js","components/Detail.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","text","loginState","react_default","a","createElement","id","className","onSubmit","login","type","name","required","onChange","handleInput","value","onClick","getNewID","input","startGame","Collection","shadow","color","selectCollection","style","backgroundColor","concat","bgColor","textShadow","CollectionList","addCollection","newCollection","removeCollection","currentCollection","Object","keys","collectionList","length","entries","map","list","components_Collection","key","Pokedex","pokedex","pokemon","index","setPokemon","addPokemon","MemberList","members","JSON","stringify","member","removePokemon","Detail","src","save","stats","alt","stat","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","defineProperty","target","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","Axios","post","state","sent","data","uri","substring","lastIndexOf","t0","console","error","stop","_x","apply","arguments","_ref2","_callee2","pokeData","_context2","get","_x2","Math","ceil","random","collection","newCollectionList","undefined","currentTarget","getAttribute","poke","toLowerCase","getStats","_callee3","_context3","reverse","alert","_callee4","_context4","put","headers","Content-Type","components_Login","components_CollectionList","components_MemberList","components_Pokedex","components_Detail","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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W,UAAW,SAAU,WAAY,aAAc,UAAW,WAAY,SAAU,UAAW,UAAW,YAAa,YAAa,SAAU,MAAO,YAAa,UAAW,WAAY,YAAa,UAAW,aAAc,WAAY,WAAY,aAAc,UAAW,SAAU,WAAY,UAAW,SAAU,SAAU,WAAY,UAAW,SAAU,WAAY,UAAW,QAAS,SAAU,YAAa,SAAU,UAAW,OAAQ,OAAQ,SAAU,UAAW,WAAY,YAAa,SAAU,YAAa,YAAa,WAAY,SAAU,WAAY,WAAY,QAAS,UAAW,WAAY,QAAS,SAAU,WAAY,SAAU,UAAW,UAAW,WAAY,aAAc,QAAS,YAAa,YAAa,SAAU,aAAc,YAAa,SAAU,UAAW,WAAY,WAAY,WAAY,SAAU,UAAW,YAAa,UAAW,YAAa,WAAY,SAAU,WAAY,SAAU,YAAa,UAAW,WAAY,YAAa,WAAY,UAAW,WAAY,WAAY,WAAY,UAAW,SAAU,UAAW,WAAY,WAAY,WAAY,UAAW,YAAa,WAAY,SAAU,QAAS,UAAW,UAAW,SAAU,QAAS,UAAW,WAAY,UAAW,YAAa,QAAS,QAAS,SAAU,UAAW,UAAW,WAAY,UAAW,YAAa,WAAY,SAAU,YAAa,WAAY,YAAa,YAAa,YAAa,UAAW,UAAW,UAAW,YAAa,UAAW,SAAU,QAAS,SAAU,WAAY,SAAU,UAAW,UAAW,UAAW,UAAW,UAAW,WAAY,QAAS,SAAU,YAAa,UAAW,aAAc,YAAa,UAAW,UAAW,WAAY,UAAW,UAAW,UAAW,WAAY,UAAW,UAAW,UAAW,WAAY,WAAY,UAAW,WAAY,SAAU,WAAY,UAAW,SAAU,OAAQ,SAAU,SAAU,WAAY,WAAY,YAAa,YAAa,SAAU,QAAS,UAAW,WAAY,UAAW,SAAU,SAAU,WAAY,WAAY,UAAW,UAAW,QAAS,WAAY,UAAW,SAAU,UAAW,SAAU,WAAY,UAAW,SAAU,SAAU,WAAY,SAAU,UAAW,WAAY,UAAW,WAAY,UAAW,WAAY,WAAY,WAAY,YAAa,SAAU,UAAW,SAAU,UAAW,UAAW,UAAW,SAAU,UAAW,WAAY,UAAW,UAAW,UAAW,UAAW,WAAY,UAAW,WAAY,QAAS,SAAU,UAAW,SAAU,SAAU,SAAU,UAAW,WAAY,UAAW,WAAY,YAAa,UAAW,QAAS,UAAW,YAAa,SAAU,SAAU,YAAa,WAAY,SAAU,YAAa,SAAU,SAAU,SAAU,UAAW,WAAY,UAAW,SAAU,UAAW,SAAU,WAAY,WAAY,WAAY,YAAa,SAAU,WAAY,WAAY,SAAU,WAAY,YAAa,SAAU,UAAW,YAAa,aAAc,QAAS,QAAS,SAAU,QAAS,WAAY,WAAY,YAAa,WAAY,YAAa,QAAS,WAAY,SAAU,SAAU,YAAa,YAAa,SAAU,WAAY,UAAW,UAAW,UAAW,YAAa,UAAW,WAAY,WAAY,UAAW,UAAW,YAAa,YAAa,UAAW,UAAW,YAAa,SAAU,WAAY,UAAW,WAAY,SAAU,WAAY,UAAW,SAAU,YAAa,QAAS,SAAU,WAAY,WAAY,QAAS,UAAW,aAAc,YAAa,UAAW,UAAW,WAAY,YAAa,YAAa,UAAW,WAAY,UAAW,SAAU,YAAa,UAAW,YAAa,aAAc,YAAa,YAAa,aAAc,YAAa,WAAY,UAAW,UAAW,UAAW,UAAW,YAAa,YAAa,UAAW,YAAa,WAAY,WAAY,QAAS,OAAQ,UAAW,QAAS,SAAU,SAAU,UAAW,YAAa,WAAY,YAAa,SAAU,UAAW,UAAW,UAAW,SAAU,UAAW,QAAS,UAAW,YAAa,QAAS,UAAW,SAAU,WAAY,SAAU,WAAY,SAAU,UAAW,WAAY,UAAW,YAAa,WAAY,UAAW,UAAW,WAAY,UAAW,WAAY,UAAW,WAAY,QAAS,WAAY,SAAU,YAAa,WAAY,UAAW,YAAa,aAAc,UAAW,WAAY,SAAU,UAAW,UAAW,YAAa,SAAU,UAAW,UAAW,aAAc,UAAW,YAAa,aAAc,QAAS,OAAQ,WAAY,WAAY,WAAY,WAAY,aAAc,YAAa,WAAY,aAAc,UAAW,YAAa,WAAY,UAAW,WAAY,aAAc,WAAY,aAAc,WAAY,UAAW,UAAW,UAAW,UAAW,WAAY,SAAU,aAAc,WAAY,aAAc,SAAU,WAAY,WAAY,WAAY,QAAS,UAAW,WAAY,WAAY,UAAW,YAAa,aAAc,UAAW,UAAW,YAAa,WAAY,SAAU,YAAa,YAAa,YAAa,WAAY,WAAY,SAAU,aAAc,aAAc,UAAW,YAAa,WAAY,YAAa,YAAa,SAAU,aAAc,YAAa,aAAc,QAAS,QAAS,YAAa,SAAU,YAAa,aAAc,SAAU,WAAY,UAAW,UAAW,aAAc,OAAQ,UAAW,UAAW,UAAW,UAAW,YAAa,UAAW,WAAY,WAA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","file":"static/js/main.51d7aea1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Login(props) {\r\n    let text = \"\";\r\n    switch (props.loginState) {\r\n        case 1:\r\n            text = `Welcome to Poke-lection!`\r\n            break;\r\n        case 2:\r\n            text = `Network/server not working at the moment, try again later.`\r\n            break;\r\n        case 3:\r\n            text = `Wrong ID, try again.`\r\n    }\r\n    return (\r\n        <div id=\"login-background\">\r\n            {\r\n                props.loginState ? (\r\n                    <form className=\"login-form\" onSubmit={props.login}>\r\n                        <h3>{text}</h3>\r\n                        <label>ID: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"id\"\r\n                            name=\"id\"\r\n                            required\r\n                            onChange={props.handleInput}\r\n                        ></input>\r\n                        <input type=\"submit\" id=\"login\" value=\"Login\"></input>\r\n                        <button id=\"new-id\" onClick={props.getNewID}>New</button>\r\n                    </form>\r\n                ) : (\r\n                        <form className=\"login-form\">\r\n                            <h2>Your new ID is:</h2>\r\n                            <h2>{props.input}</h2>\r\n                            <h2>Remember it!</h2>\r\n                            <button onClick={props.startGame}>Let's Start!</button>\r\n                        </form>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nfunction Collection(props) {\r\n    const shadow = props.color === \"black\" ? \"white\" : \"black\";\r\n    return (\r\n        <div\r\n            className=\"collection\"\r\n            name={props.name}\r\n            onClick={props.selectCollection}\r\n            style={{\r\n                backgroundColor: `${props.bgColor}`,\r\n                color: `${props.color}`,\r\n                textShadow: `0px 0px 10px ${shadow}`\r\n            }}>\r\n            <h3>\r\n                {props.name}\r\n            </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Collection;\r\n","import React from 'react';\r\nimport Collection from './Collection';\r\n\r\nfunction CollectionList(props) {\r\n    return (\r\n        <div className=\"column collectionList\">\r\n            <form className=\"title-container\" onSubmit={props.addCollection}>\r\n                <h2>Collection List</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"newCollection\"\r\n                    name=\"newCollection\"\r\n                    value={props.newCollection}\r\n                    onChange={props.handleInput}\r\n                    required\r\n                ></input>\r\n                <input type=\"submit\" value=\"Add Collection\"></input>\r\n                <input\r\n                    type=\"button\"\r\n                    value=\"Remove Current Collection\"\r\n                    onClick={() => props.removeCollection(props.currentCollection)}></input>\r\n            </form>\r\n\r\n            <div className=\"content-container lists\">\r\n                {Object.keys(props.collectionList).length > 0 ? (\r\n                    Object.entries(props.collectionList).map(list => {\r\n                        return (\r\n                            <Collection\r\n                                key={list[0]}\r\n                                name={list[0]}\r\n                                bgColor={list[1].bgColor}\r\n                                color={list[0] === props.currentCollection ? \"white\" : \"black\"}\r\n                                selectCollection={props.selectCollection}\r\n                            />\r\n                        );\r\n                    })\r\n                ) : (\r\n                        <div>\r\n                            <h3>Start by adding a new collection!</h3>\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CollectionList;\r\n","import React from 'react';\r\n\r\nfunction Pokedex(props) {\r\n    let pokedex = [\"Bulbasaur\", \"Ivysaur\", \"Venusaur\", \"Charmander\", \"Charmeleon\", \"Charizard\", \"Squirtle\", \"Wartortle\", \"Blastoise\", \"Caterpie\", \"Metapod\", \"Butterfree\", \"Weedle\", \"Kakuna\", \"Beedrill\", \"Pidgey\", \"Pidgeotto\", \"Pidgeot\", \"Rattata\", \"Raticate\", \"Spearow\", \"Fearow\", \"Ekans\", \"Arbok\", \"Pikachu\", \"Raichu\", \"Sandshrew\", \"Sandslash\", \"Nidoran♀\", \"Nidorina\", \"Nidoqueen\", \"Nidoran♂\", \"Nidorino\", \"Nidoking\", \"Clefairy\", \"Clefable\", \"Vulpix\", \"Ninetales\", \"Jigglypuff\", \"Wigglytuff\", \"Zubat\", \"Golbat\", \"Oddish\", \"Gloom\", \"Vileplume\", \"Paras\", \"Parasect\", \"Venonat\", \"Venomoth\", \"Diglett\", \"Dugtrio\", \"Meowth\", \"Persian\", \"Psyduck\", \"Golduck\", \"Mankey\", \"Primeape\", \"Growlithe\", \"Arcanine\", \"Poliwag\", \"Poliwhirl\", \"Poliwrath\", \"Abra\", \"Kadabra\", \"Alakazam\", \"Machop\", \"Machoke\", \"Machamp\", \"Bellsprout\", \"Weepinbell\", \"Victreebel\", \"Tentacool\", \"Tentacruel\", \"Geodude\", \"Graveler\", \"Golem\", \"Ponyta\", \"Rapidash\", \"Slowpoke\", \"Slowbro\", \"Magnemite\", \"Magneton\", \"Farfetch’d\", \"Doduo\", \"Dodrio\", \"Seel\", \"Dewgong\", \"Grimer\", \"Muk\", \"Shellder\", \"Cloyster\", \"Gastly\", \"Haunter\", \"Gengar\", \"Onix\", \"Drowzee\", \"Hypno\", \"Krabby\", \"Kingler\", \"Voltorb\", \"Electrode\", \"Exeggcute\", \"Exeggutor\", \"Cubone\", \"Marowak\", \"Hitmonlee\", \"Hitmonchan\", \"Lickitung\", \"Koffing\", \"Weezing\", \"Rhyhorn\", \"Rhydon\", \"Chansey\", \"Tangela\", \"Kangaskhan\", \"Horsea\", \"Seadra\", \"Goldeen\", \"Seaking\", \"Staryu\", \"Starmie\", \"Mr. Mime\", \"Scyther\", \"Jynx\", \"Electabuzz\", \"Magmar\", \"Pinsir\", \"Tauros\", \"Magikarp\", \"Gyarados\", \"Lapras\", \"Ditto\", \"Eevee\", \"Vaporeon\", \"Jolteon\", \"Flareon\", \"Porygon\", \"Omanyte\", \"Omastar\", \"Kabuto\", \"Kabutops\", \"Aerodactyl\", \"Snorlax\", \"Articuno\", \"Zapdos\", \"Moltres\", \"Dratini\", \"Dragonair\", \"Dragonite\", \"Mewtwo\", \"Mew\", \"Chikorita\", \"Bayleef\", \"Meganium\", \"Cyndaquil\", \"Quilava\", \"Typhlosion\", \"Totodile\", \"Croconaw\", \"Feraligatr\", \"Sentret\", \"Furret\", \"Hoothoot\", \"Noctowl\", \"Ledyba\", \"Ledian\", \"Spinarak\", \"Ariados\", \"Crobat\", \"Chinchou\", \"Lanturn\", \"Pichu\", \"Cleffa\", \"Igglybuff\", \"Togepi\", \"Togetic\", \"Natu\", \"Xatu\", \"Mareep\", \"Flaaffy\", \"Ampharos\", \"Bellossom\", \"Marill\", \"Azumarill\", \"Sudowoodo\", \"Politoed\", \"Hoppip\", \"Skiploom\", \"Jumpluff\", \"Aipom\", \"Sunkern\", \"Sunflora\", \"Yanma\", \"Wooper\", \"Quagsire\", \"Espeon\", \"Umbreon\", \"Murkrow\", \"Slowking\", \"Misdreavus\", \"Unown\", \"Wobbuffet\", \"Girafarig\", \"Pineco\", \"Forretress\", \"Dunsparce\", \"Gligar\", \"Steelix\", \"Snubbull\", \"Granbull\", \"Qwilfish\", \"Scizor\", \"Shuckle\", \"Heracross\", \"Sneasel\", \"Teddiursa\", \"Ursaring\", \"Slugma\", \"Magcargo\", \"Swinub\", \"Piloswine\", \"Corsola\", \"Remoraid\", \"Octillery\", \"Delibird\", \"Mantine\", \"Skarmory\", \"Houndour\", \"Houndoom\", \"Kingdra\", \"Phanpy\", \"Donphan\", \"Porygon2\", \"Stantler\", \"Smeargle\", \"Tyrogue\", \"Hitmontop\", \"Smoochum\", \"Elekid\", \"Magby\", \"Miltank\", \"Blissey\", \"Raikou\", \"Entei\", \"Suicune\", \"Larvitar\", \"Pupitar\", \"Tyranitar\", \"Lugia\", \"Ho-Oh\", \"Celebi\", \"Treecko\", \"Grovyle\", \"Sceptile\", \"Torchic\", \"Combusken\", \"Blaziken\", \"Mudkip\", \"Marshtomp\", \"Swampert\", \"Poochyena\", \"Mightyena\", \"Zigzagoon\", \"Linoone\", \"Wurmple\", \"Silcoon\", \"Beautifly\", \"Cascoon\", \"Dustox\", \"Lotad\", \"Lombre\", \"Ludicolo\", \"Seedot\", \"Nuzleaf\", \"Shiftry\", \"Taillow\", \"Swellow\", \"Wingull\", \"Pelipper\", \"Ralts\", \"Kirlia\", \"Gardevoir\", \"Surskit\", \"Masquerain\", \"Shroomish\", \"Breloom\", \"Slakoth\", \"Vigoroth\", \"Slaking\", \"Nincada\", \"Ninjask\", \"Shedinja\", \"Whismur\", \"Loudred\", \"Exploud\", \"Makuhita\", \"Hariyama\", \"Azurill\", \"Nosepass\", \"Skitty\", \"Delcatty\", \"Sableye\", \"Mawile\", \"Aron\", \"Lairon\", \"Aggron\", \"Meditite\", \"Medicham\", \"Electrike\", \"Manectric\", \"Plusle\", \"Minun\", \"Volbeat\", \"Illumise\", \"Roselia\", \"Gulpin\", \"Swalot\", \"Carvanha\", \"Sharpedo\", \"Wailmer\", \"Wailord\", \"Numel\", \"Camerupt\", \"Torkoal\", \"Spoink\", \"Grumpig\", \"Spinda\", \"Trapinch\", \"Vibrava\", \"Flygon\", \"Cacnea\", \"Cacturne\", \"Swablu\", \"Altaria\", \"Zangoose\", \"Seviper\", \"Lunatone\", \"Solrock\", \"Barboach\", \"Whiscash\", \"Corphish\", \"Crawdaunt\", \"Baltoy\", \"Claydol\", \"Lileep\", \"Cradily\", \"Anorith\", \"Armaldo\", \"Feebas\", \"Milotic\", \"Castform\", \"Kecleon\", \"Shuppet\", \"Banette\", \"Duskull\", \"Dusclops\", \"Tropius\", \"Chimecho\", \"Absol\", \"Wynaut\", \"Snorunt\", \"Glalie\", \"Spheal\", \"Sealeo\", \"Walrein\", \"Clamperl\", \"Huntail\", \"Gorebyss\", \"Relicanth\", \"Luvdisc\", \"Bagon\", \"Shelgon\", \"Salamence\", \"Beldum\", \"Metang\", \"Metagross\", \"Regirock\", \"Regice\", \"Registeel\", \"Latias\", \"Latios\", \"Kyogre\", \"Groudon\", \"Rayquaza\", \"Jirachi\", \"Deoxys\", \"Turtwig\", \"Grotle\", \"Torterra\", \"Chimchar\", \"Monferno\", \"Infernape\", \"Piplup\", \"Prinplup\", \"Empoleon\", \"Starly\", \"Staravia\", \"Staraptor\", \"Bidoof\", \"Bibarel\", \"Kricketot\", \"Kricketune\", \"Shinx\", \"Luxio\", \"Luxray\", \"Budew\", \"Roserade\", \"Cranidos\", \"Rampardos\", \"Shieldon\", \"Bastiodon\", \"Burmy\", \"Wormadam\", \"Mothim\", \"Combee\", \"Vespiquen\", \"Pachirisu\", \"Buizel\", \"Floatzel\", \"Cherubi\", \"Cherrim\", \"Shellos\", \"Gastrodon\", \"Ambipom\", \"Drifloon\", \"Drifblim\", \"Buneary\", \"Lopunny\", \"Mismagius\", \"Honchkrow\", \"Glameow\", \"Purugly\", \"Chingling\", \"Stunky\", \"Skuntank\", \"Bronzor\", \"Bronzong\", \"Bonsly\", \"Mime Jr.\", \"Happiny\", \"Chatot\", \"Spiritomb\", \"Gible\", \"Gabite\", \"Garchomp\", \"Munchlax\", \"Riolu\", \"Lucario\", \"Hippopotas\", \"Hippowdon\", \"Skorupi\", \"Drapion\", \"Croagunk\", \"Toxicroak\", \"Carnivine\", \"Finneon\", \"Lumineon\", \"Mantyke\", \"Snover\", \"Abomasnow\", \"Weavile\", \"Magnezone\", \"Lickilicky\", \"Rhyperior\", \"Tangrowth\", \"Electivire\", \"Magmortar\", \"Togekiss\", \"Yanmega\", \"Leafeon\", \"Glaceon\", \"Gliscor\", \"Mamoswine\", \"Porygon-Z\", \"Gallade\", \"Probopass\", \"Dusknoir\", \"Froslass\", \"Rotom\", \"Uxie\", \"Mesprit\", \"Azelf\", \"Dialga\", \"Palkia\", \"Heatran\", \"Regigigas\", \"Giratina\", \"Cresselia\", \"Phione\", \"Manaphy\", \"Darkrai\", \"Shaymin\", \"Arceus\", \"Victini\", \"Snivy\", \"Servine\", \"Serperior\", \"Tepig\", \"Pignite\", \"Emboar\", \"Oshawott\", \"Dewott\", \"Samurott\", \"Patrat\", \"Watchog\", \"Lillipup\", \"Herdier\", \"Stoutland\", \"Purrloin\", \"Liepard\", \"Pansage\", \"Simisage\", \"Pansear\", \"Simisear\", \"Panpour\", \"Simipour\", \"Munna\", \"Musharna\", \"Pidove\", \"Tranquill\", \"Unfezant\", \"Blitzle\", \"Zebstrika\", \"Roggenrola\", \"Boldore\", \"Gigalith\", \"Woobat\", \"Swoobat\", \"Drilbur\", \"Excadrill\", \"Audino\", \"Timburr\", \"Gurdurr\", \"Conkeldurr\", \"Tympole\", \"Palpitoad\", \"Seismitoad\", \"Throh\", \"Sawk\", \"Sewaddle\", \"Swadloon\", \"Leavanny\", \"Venipede\", \"Whirlipede\", \"Scolipede\", \"Cottonee\", \"Whimsicott\", \"Petilil\", \"Lilligant\", \"Basculin\", \"Sandile\", \"Krokorok\", \"Krookodile\", \"Darumaka\", \"Darmanitan\", \"Maractus\", \"Dwebble\", \"Crustle\", \"Scraggy\", \"Scrafty\", \"Sigilyph\", \"Yamask\", \"Cofagrigus\", \"Tirtouga\", \"Carracosta\", \"Archen\", \"Archeops\", \"Trubbish\", \"Garbodor\", \"Zorua\", \"Zoroark\", \"Minccino\", \"Cinccino\", \"Gothita\", \"Gothorita\", \"Gothitelle\", \"Solosis\", \"Duosion\", \"Reuniclus\", \"Ducklett\", \"Swanna\", \"Vanillite\", \"Vanillish\", \"Vanilluxe\", \"Deerling\", \"Sawsbuck\", \"Emolga\", \"Karrablast\", \"Escavalier\", \"Foongus\", \"Amoonguss\", \"Frillish\", \"Jellicent\", \"Alomomola\", \"Joltik\", \"Galvantula\", \"Ferroseed\", \"Ferrothorn\", \"Klink\", \"Klang\", \"Klinklang\", \"Tynamo\", \"Eelektrik\", \"Eelektross\", \"Elgyem\", \"Beheeyem\", \"Litwick\", \"Lampent\", \"Chandelure\", \"Axew\", \"Fraxure\", \"Haxorus\", \"Cubchoo\", \"Beartic\", \"Cryogonal\", \"Shelmet\", \"Accelgor\", \"Stunfisk\", \"Mienfoo\", \"Mienshao\", \"Druddigon\", \"Golett\", \"Golurk\", \"Pawniard\", \"Bisharp\", \"Bouffalant\", \"Rufflet\", \"Braviary\", \"Vullaby\", \"Mandibuzz\", \"Heatmor\", \"Durant\", \"Deino\", \"Zweilous\", \"Hydreigon\", \"Larvesta\", \"Volcarona\", \"Cobalion\", \"Terrakion\", \"Virizion\", \"Tornadus\", \"Thundurus\", \"Reshiram\", \"Zekrom\", \"Landorus\", \"Kyurem\", \"Keldeo\", \"Meloetta\", \"Genesect\", \"Chespin\", \"Quilladin\", \"Chesnaught\", \"Fennekin\", \"Braixen\", \"Delphox\", \"Froakie\", \"Frogadier\", \"Greninja\", \"Bunnelby\", \"Diggersby\", \"Fletchling\", \"Fletchinder\", \"Talonflame\", \"Scatterbug\", \"Spewpa\", \"Vivillon\", \"Litleo\", \"Pyroar\", \"Flabébé\", \"Floette\", \"Florges\", \"Skiddo\", \"Gogoat\", \"Pancham\", \"Pangoro\", \"Furfrou\", \"Espurr\", \"Meowstic\", \"Honedge\", \"Doublade\", \"Aegislash\", \"Spritzee\", \"Aromatisse\", \"Swirlix\", \"Slurpuff\", \"Inkay\", \"Malamar\", \"Binacle\", \"Barbaracle\", \"Skrelp\", \"Dragalge\", \"Clauncher\", \"Clawitzer\", \"Helioptile\", \"Heliolisk\", \"Tyrunt\", \"Tyrantrum\", \"Amaura\", \"Aurorus\", \"Sylveon\", \"Hawlucha\", \"Dedenne\", \"Carbink\", \"Goomy\", \"Sliggoo\", \"Goodra\", \"Klefki\", \"Phantump\", \"Trevenant\", \"Pumpkaboo\", \"Gourgeist\", \"Bergmite\", \"Avalugg\", \"Noibat\", \"Noivern\", \"Xerneas\", \"Yveltal\", \"Zygarde\", \"Diancie\", \"Hoopa\", \"Volcanion\"];\r\n    pokedex = pokedex.map((pokemon, index) => {\r\n        return (\r\n            <div key={pokemon}>\r\n                <h3 onClick={() => props.setPokemon(index + 1, pokemon)}>{index+1}: {pokemon}</h3>\r\n                <input type=\"button\" value=\"Add\" onClick={() => props.addPokemon(pokemon)}></input>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"column pokedex\">\r\n            <div className=\"title-container\">\r\n                <h2>Pokedex</h2>\r\n            </div>\r\n            <div className=\"content-container\">\r\n                {pokedex}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pokedex;\r\n","import React from 'react';\r\n\r\nfunction MemberList(props) {\r\n    let members = props.collectionList[props.currentCollection];\r\n\r\n    if (members) {\r\n        const color = props.currentCollection ? members.bgColor : \"orange\";\r\n        members = members.members;\r\n        if (members && JSON.stringify(members) !== JSON.stringify({})) {\r\n            members = Object.keys(members).map((member, index) => {\r\n                return (\r\n                    <div key={member + member}>\r\n                        <h3 onClick={() => props.setPokemon(index+1, member)}>{member}</h3>\r\n                        <input type=\"button\" value=\"Remove\" onClick={() => props.removePokemon(member)}></input>\r\n                    </div>\r\n                );\r\n            })\r\n        } else {\r\n            members = (\r\n                <h3>Add some pokemon from the Pokedex</h3>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"column memberList\">\r\n                <div className=\"title-container\">\r\n                    <h2>{props.currentCollection}</h2>\r\n                </div>\r\n                <div className=\"content-container\" style={{backgroundColor: `${color}`}}>\r\n                    {members}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"column memberList\">\r\n            <div className=\"title-container\"></div>\r\n            <div className=\"content-container\">\r\n                <div>\r\n                    {Object.keys(props.collectionList).length > 0 ? (\r\n                        <h3>Now select a collection</h3>\r\n                    ) : (\r\n                        <h3>Serious, go add a collection</h3>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemberList;\r\n","import React from 'react';\r\n\r\nfunction Detail(props) {\r\n    let src = '';\r\n    if (props.pokemon) {\r\n        let name = props.pokemon;\r\n        name = (name === \"mr. mime\") ? \"mr-mime\" \r\n            : (name === \"mime jr.\") ? \"mime-jr\" : name;\r\n        src = \"http://www.pokestadium.com/sprites/xy/\" + name + \".gif\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"column detail\">\r\n            <div className=\"title-container\">\r\n                <button onClick={props.save}>\r\n                    <h3>Save Collections</h3>\r\n                </button>\r\n            </div>\r\n            <div className=\"content-container\">\r\n                {props.pokemon && props.stats ? (\r\n                    <div>\r\n                        <img src={src} alt={props.pokemon} />\r\n                        {props.stats.map(stat => {\r\n                            return (\r\n                                <h3 key={stat.stat.name}>{stat.stat.name}: {stat[\"base_stat\"]}</h3>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                ) : (\r\n                    <h3>Click on a Pokemon</h3>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Detail;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport Login from './components/Login';\nimport CollectionList from './components/CollectionList';\nimport Pokedex from './components/Pokedex';\nimport MemberList from './components/MemberList';\nimport Detail from './components/Detail';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      collectionList: {},\n      id: '',\n      loginState: 1,\n      // null: login successful, start game\n      // 0: new id created successfully\n      // 1: initial state\n      // 2: network/server issue when creating new at login\n      // 3: wrong id at login, indicate to try again\n      newCollection: '',\n      currentCollection: undefined, // string of the current collection\n      pokemon: undefined,\n      index: undefined,\n      stats: undefined,\n    }\n  }\n\n\n  /****************************************************************************\n    Handle Inputs\n  *****************************************************************************/\n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  /****************************************************************************\n    Login related\n  *****************************************************************************/\n  getNewID = async (e) => {\n    e.preventDefault();\n\n    try {\n      let id = await Axios.post(\"https://api.myjson.com/bins\", this.state.collectionList);\n      id = id.data.uri;\n      this.setState({\n        id: id.substring(id.lastIndexOf(\"/\") + 1)\n      });\n\n      this.setState({\n        loginState: 0\n      });\n\n    } catch (err) {\n      this.setState({\n        loginState: 2\n      });\n      console.error(err);\n    }\n  }\n\n  login = async (e) => {\n    e.preventDefault();\n\n    try {\n      const pokeData = await Axios.get(\"https://api.myjson.com/bins/\" + this.state.id);\n      this.setState({\n        collectionList: pokeData.data,\n        loginState: null\n      });\n    } catch (err) {\n      this.setState({\n        loginState: 3\n      });\n      console.error(err);\n    }\n  }\n\n  startGame = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      loginState: null\n    });\n  }\n\n\n  /****************************************************************************\n    CollectionList\n  *****************************************************************************/\n  addCollection = (e) => {\n    e.preventDefault();\n\n    const bgColor = `rgb(${Math.ceil(Math.random() * 255)}, ${Math.ceil(Math.random() * 255)}, ${Math.ceil(Math.random() * 255)})`;\n    let list = this.state.collectionList;\n    list[`${this.state.newCollection}`] = { bgColor: bgColor, members: {} };\n    this.setState({\n      collectionList: list,\n      newCollection: \"\"\n    });\n  }\n\n  removeCollection = (collection) => {\n    if (collection) {\n      let newCollectionList = this.state.collectionList;\n      delete newCollectionList[collection];\n      this.setState({\n        collectionList: newCollectionList,\n        currentCollection: undefined\n      });\n    }\n  }\n\n\n  /****************************************************************************\n    Collection\n  *****************************************************************************/\n  selectCollection = (e) => {\n    this.setState({\n      currentCollection: e.currentTarget.getAttribute(\"name\")\n    });\n  }\n\n\n  /****************************************************************************\n    Pokedex & MemberList\n  *****************************************************************************/\n  addPokemon = (poke) => {\n    if (this.state.currentCollection) {\n      let newCollectionList = this.state.collectionList;\n      newCollectionList[this.state.currentCollection].members[poke] = poke;\n      this.setState({\n        collectionList: newCollectionList\n      });\n    }\n  }\n\n  removePokemon = (poke) => {\n    let newCollectionList = this.state.collectionList;\n    delete newCollectionList[this.state.currentCollection].members[poke];\n    this.setState({\n      collectionList: newCollectionList\n    });\n  }\n\n  setPokemon = (index, poke) => {\n    if (this.state.index !== index) {\n      this.setState({\n        pokemon: poke.toLowerCase(),\n        index: index\n      }, () => {\n        this.getStats()\n      });\n    }\n  }\n\n  getStats = async () => {\n    try {\n      const data = await Axios.get(\"https://pokeapi.co/api/v2/pokemon/\" + this.state.index + \"/\");\n      this.setState({\n        stats: data.data.stats.reverse()\n      });\n    } catch (err) {\n      alert(\"Server Error, try again later.\");\n      console.error(err);\n    }\n  }\n\n  save = async () => {\n    try {\n      const save = await Axios.put(\n        \"https://api.myjson.com/bins/\" + this.state.id,\n        JSON.stringify(this.state.collectionList),\n        {\n          headers: { 'Content-Type': 'application/json' }\n        }\n      );\n      alert(\"Saved Successfully\");\n    } catch (err) {\n      alert(\"Saved Fail\");\n      console.error(err);\n    }\n  }\n\n  /****************************************************************************\n    render\n  *****************************************************************************/\n  render() {\n    return (\n      <div className=\"app-container\">\n        {this.state.loginState !== null ? (\n          <Login\n            getNewID={this.getNewID}\n            login={this.login}\n            loginState={this.state.loginState}\n            input={this.state.id}\n            handleInput={this.handleInput}\n            startGame={this.startGame}\n          />\n        ) : (\n            <div>\n              <CollectionList\n                collectionList={this.state.collectionList}\n                currentCollection={this.state.currentCollection}\n                newCollection={this.state.newCollection}\n                handleInput={this.handleInput}\n                addCollection={this.addCollection}\n                removeCollection={this.removeCollection}\n                selectCollection={this.selectCollection}\n              />\n              <MemberList\n                collectionList={this.state.collectionList}\n                currentCollection={this.state.currentCollection}\n                removePokemon={this.removePokemon}\n                setPokemon={this.setPokemon}\n              />\n              <Pokedex\n                addPokemon={this.addPokemon}\n                setPokemon={this.setPokemon}\n              />\n              <Detail\n                pokemon={this.state.pokemon}\n                stats={this.state.stats}\n                save={this.save}\n              />\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}